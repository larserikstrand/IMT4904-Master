package no.hig.strand.lars.mtp;

import java.util.ArrayList;

import android.content.Context;
import android.database.Cursor;
import android.graphics.Color;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;

public class TodayFragment extends Fragment {
	
	private View mRootView;
	private ArrayList<Task> mTasks;
	private TodayListAdapter mAdapter;
	private String mDate;
	
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View rootView = inflater.inflate(R.layout.fragment_today, container, false);
		
		mRootView = rootView;
		mTasks = new ArrayList<Task>();
		mAdapter = new TodayListAdapter(getActivity(), mTasks);
		
		setupUI();
		
		return rootView;
	}
	
	
	
	@Override
	public void onResume() {
		mDate = Utilities.getDate();
		new LoadTasksFromDatabase().execute(mDate);
		super.onResume();
	}



	private void setupUI() {
		ListView listView = (ListView) mRootView.findViewById(R.id.tasks_list);
		listView.setAdapter(mAdapter);
	}
	
	
	
	private class LoadTasksFromDatabase extends AsyncTask<String, Void, ArrayList<Task>> {
		private TasksDb tasksDb;
		
		@Override
		protected Void doInBackground(String... params) {
			tasksDb = new TasksDb(getActivity());
			tasksDb.open();
			
			Cursor c = tasksDb.fetchTasksByDate(params[0]);
			do {
				
			} while (c.moveToNext());
			
			return null;
		}

		@Override
		protected void onPostExecute(Void result) {
			// TODO Auto-generated method stub
			super.onPostExecute(result);
		}
		
	}
	
	
	
	private class TodayListAdapter extends ArrayAdapter<Task> {
		private final Context context;
		private final ArrayList<Task> tasks;
		
		public TodayListAdapter(Context context, ArrayList<Task> tasks) {
			super(context, R.layout.item_list_task, tasks);
			this.context = context;
			this.tasks = tasks;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			LayoutInflater inflater = (LayoutInflater) context
					.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			View rowView = inflater.inflate(R.layout.item_today_list,
					parent, false);
			
			TextView taskText = (TextView) rowView.findViewById(R.id.task_text);
			taskText.setText(tasks.get(position).getCategory() + ": "
							+ tasks.get(position).getDescription());
			TextView locationText = (TextView) rowView
					.findViewById(R.id.location_text);
			locationText.setText(tasks.get(position).getAddress());
			
			Button button = (Button) rowView.
					findViewById(R.id.start_pause_button);
			button.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					// TODO start or pause task...
					String text = ((Button) v).getText().toString();
					LinearLayout layout = (LinearLayout) v.getParent();
					if (text.equals(getString(R.string.start))) {
						((Button) v).setText(getString(R.string.pause));
						layout.setBackgroundColor(Color.GREEN);
					} else {
						((Button) v).setText(getString(R.string.start));
						layout.setBackgroundColor(Color.WHITE);
					}
				}
			});
			
			button = (Button) rowView.findViewById(R.id.finished_button);
			button.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					// TODO finish task...
				}
			});
			
			return rowView;
		}
		
	}

}
